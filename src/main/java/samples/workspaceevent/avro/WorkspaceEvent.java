/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package samples.workspaceevent.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class WorkspaceEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WorkspaceEvent\",\"namespace\":\"samples.workspaceevent.avro\",\"fields\":[{\"name\":\"workspaceId\",\"type\":\"string\"},{\"name\":\"eventTimestamp\",\"type\":\"long\"},{\"name\":\"modelId\",\"type\":\"string\"},{\"name\":\"state\",\"type\":[\"string\",\"null\"]},{\"name\":\"version\",\"type\":[\"string\",\"null\"]},{\"name\":\"memUtil\",\"type\":\"double\"},{\"name\":\"cpuUtl\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence workspaceId;
  @Deprecated public long eventTimestamp;
  @Deprecated public java.lang.CharSequence modelId;
  @Deprecated public java.lang.CharSequence state;
  @Deprecated public java.lang.CharSequence version;
  @Deprecated public double memUtil;
  @Deprecated public double cpuUtl;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public WorkspaceEvent() {}

  /**
   * All-args constructor.
   */
  public WorkspaceEvent(java.lang.CharSequence workspaceId, java.lang.Long eventTimestamp, java.lang.CharSequence modelId, java.lang.CharSequence state, java.lang.CharSequence version, java.lang.Double memUtil, java.lang.Double cpuUtl) {
    this.workspaceId = workspaceId;
    this.eventTimestamp = eventTimestamp;
    this.modelId = modelId;
    this.state = state;
    this.version = version;
    this.memUtil = memUtil;
    this.cpuUtl = cpuUtl;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return workspaceId;
    case 1: return eventTimestamp;
    case 2: return modelId;
    case 3: return state;
    case 4: return version;
    case 5: return memUtil;
    case 6: return cpuUtl;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: workspaceId = (java.lang.CharSequence)value$; break;
    case 1: eventTimestamp = (java.lang.Long)value$; break;
    case 2: modelId = (java.lang.CharSequence)value$; break;
    case 3: state = (java.lang.CharSequence)value$; break;
    case 4: version = (java.lang.CharSequence)value$; break;
    case 5: memUtil = (java.lang.Double)value$; break;
    case 6: cpuUtl = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'workspaceId' field.
   */
  public java.lang.CharSequence getWorkspaceId() {
    return workspaceId;
  }

  /**
   * Sets the value of the 'workspaceId' field.
   * @param value the value to set.
   */
  public void setWorkspaceId(java.lang.CharSequence value) {
    this.workspaceId = value;
  }

  /**
   * Gets the value of the 'eventTimestamp' field.
   */
  public java.lang.Long getEventTimestamp() {
    return eventTimestamp;
  }

  /**
   * Sets the value of the 'eventTimestamp' field.
   * @param value the value to set.
   */
  public void setEventTimestamp(java.lang.Long value) {
    this.eventTimestamp = value;
  }

  /**
   * Gets the value of the 'modelId' field.
   */
  public java.lang.CharSequence getModelId() {
    return modelId;
  }

  /**
   * Sets the value of the 'modelId' field.
   * @param value the value to set.
   */
  public void setModelId(java.lang.CharSequence value) {
    this.modelId = value;
  }

  /**
   * Gets the value of the 'state' field.
   */
  public java.lang.CharSequence getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.CharSequence value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'memUtil' field.
   */
  public java.lang.Double getMemUtil() {
    return memUtil;
  }

  /**
   * Sets the value of the 'memUtil' field.
   * @param value the value to set.
   */
  public void setMemUtil(java.lang.Double value) {
    this.memUtil = value;
  }

  /**
   * Gets the value of the 'cpuUtl' field.
   */
  public java.lang.Double getCpuUtl() {
    return cpuUtl;
  }

  /**
   * Sets the value of the 'cpuUtl' field.
   * @param value the value to set.
   */
  public void setCpuUtl(java.lang.Double value) {
    this.cpuUtl = value;
  }

  /** Creates a new WorkspaceEvent RecordBuilder */
  public static samples.workspaceevent.avro.WorkspaceEvent.Builder newBuilder() {
    return new samples.workspaceevent.avro.WorkspaceEvent.Builder();
  }
  
  /** Creates a new WorkspaceEvent RecordBuilder by copying an existing Builder */
  public static samples.workspaceevent.avro.WorkspaceEvent.Builder newBuilder(samples.workspaceevent.avro.WorkspaceEvent.Builder other) {
    return new samples.workspaceevent.avro.WorkspaceEvent.Builder(other);
  }
  
  /** Creates a new WorkspaceEvent RecordBuilder by copying an existing WorkspaceEvent instance */
  public static samples.workspaceevent.avro.WorkspaceEvent.Builder newBuilder(samples.workspaceevent.avro.WorkspaceEvent other) {
    return new samples.workspaceevent.avro.WorkspaceEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for WorkspaceEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WorkspaceEvent>
    implements org.apache.avro.data.RecordBuilder<WorkspaceEvent> {

    private java.lang.CharSequence workspaceId;
    private long eventTimestamp;
    private java.lang.CharSequence modelId;
    private java.lang.CharSequence state;
    private java.lang.CharSequence version;
    private double memUtil;
    private double cpuUtl;

    /** Creates a new Builder */
    private Builder() {
      super(samples.workspaceevent.avro.WorkspaceEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(samples.workspaceevent.avro.WorkspaceEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.workspaceId)) {
        this.workspaceId = data().deepCopy(fields()[0].schema(), other.workspaceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[1].schema(), other.eventTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modelId)) {
        this.modelId = data().deepCopy(fields()[2].schema(), other.modelId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.state)) {
        this.state = data().deepCopy(fields()[3].schema(), other.state);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.version)) {
        this.version = data().deepCopy(fields()[4].schema(), other.version);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.memUtil)) {
        this.memUtil = data().deepCopy(fields()[5].schema(), other.memUtil);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cpuUtl)) {
        this.cpuUtl = data().deepCopy(fields()[6].schema(), other.cpuUtl);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing WorkspaceEvent instance */
    private Builder(samples.workspaceevent.avro.WorkspaceEvent other) {
            super(samples.workspaceevent.avro.WorkspaceEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.workspaceId)) {
        this.workspaceId = data().deepCopy(fields()[0].schema(), other.workspaceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[1].schema(), other.eventTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modelId)) {
        this.modelId = data().deepCopy(fields()[2].schema(), other.modelId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.state)) {
        this.state = data().deepCopy(fields()[3].schema(), other.state);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.version)) {
        this.version = data().deepCopy(fields()[4].schema(), other.version);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.memUtil)) {
        this.memUtil = data().deepCopy(fields()[5].schema(), other.memUtil);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cpuUtl)) {
        this.cpuUtl = data().deepCopy(fields()[6].schema(), other.cpuUtl);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'workspaceId' field */
    public java.lang.CharSequence getWorkspaceId() {
      return workspaceId;
    }
    
    /** Sets the value of the 'workspaceId' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setWorkspaceId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.workspaceId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'workspaceId' field has been set */
    public boolean hasWorkspaceId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'workspaceId' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearWorkspaceId() {
      workspaceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'eventTimestamp' field */
    public java.lang.Long getEventTimestamp() {
      return eventTimestamp;
    }
    
    /** Sets the value of the 'eventTimestamp' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setEventTimestamp(long value) {
      validate(fields()[1], value);
      this.eventTimestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'eventTimestamp' field has been set */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'eventTimestamp' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearEventTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'modelId' field */
    public java.lang.CharSequence getModelId() {
      return modelId;
    }
    
    /** Sets the value of the 'modelId' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setModelId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.modelId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'modelId' field has been set */
    public boolean hasModelId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'modelId' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearModelId() {
      modelId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'state' field */
    public java.lang.CharSequence getState() {
      return state;
    }
    
    /** Sets the value of the 'state' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setState(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.state = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'state' field has been set */
    public boolean hasState() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'state' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearState() {
      state = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.CharSequence getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.version = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'version' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearVersion() {
      version = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'memUtil' field */
    public java.lang.Double getMemUtil() {
      return memUtil;
    }
    
    /** Sets the value of the 'memUtil' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setMemUtil(double value) {
      validate(fields()[5], value);
      this.memUtil = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'memUtil' field has been set */
    public boolean hasMemUtil() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'memUtil' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearMemUtil() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'cpuUtl' field */
    public java.lang.Double getCpuUtl() {
      return cpuUtl;
    }
    
    /** Sets the value of the 'cpuUtl' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder setCpuUtl(double value) {
      validate(fields()[6], value);
      this.cpuUtl = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'cpuUtl' field has been set */
    public boolean hasCpuUtl() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'cpuUtl' field */
    public samples.workspaceevent.avro.WorkspaceEvent.Builder clearCpuUtl() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public WorkspaceEvent build() {
      try {
        WorkspaceEvent record = new WorkspaceEvent();
        record.workspaceId = fieldSetFlags()[0] ? this.workspaceId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.eventTimestamp = fieldSetFlags()[1] ? this.eventTimestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.modelId = fieldSetFlags()[2] ? this.modelId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.state = fieldSetFlags()[3] ? this.state : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.version = fieldSetFlags()[4] ? this.version : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.memUtil = fieldSetFlags()[5] ? this.memUtil : (java.lang.Double) defaultValue(fields()[5]);
        record.cpuUtl = fieldSetFlags()[6] ? this.cpuUtl : (java.lang.Double) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
